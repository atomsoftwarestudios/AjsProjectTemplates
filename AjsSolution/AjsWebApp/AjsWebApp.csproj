<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TypeScript\Microsoft.TypeScript.Default.props" Condition="Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TypeScript\Microsoft.TypeScript.Default.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <ProjectGuid>{$guid1$}</ProjectGuid>
    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <OutputPath>bin</OutputPath>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <TypeScriptToolsVersion>2.2</TypeScriptToolsVersion>
    <UseIISExpress>true</UseIISExpress>
    <IISExpressSSLPort />
    <IISExpressAnonymousAuthentication />
    <IISExpressWindowsAuthentication />
    <IISExpressUseClassicPipelineMode />
    <UseGlobalApplicationHostFile />
    <TargetFrameworkProfile />
  </PropertyGroup>
  <ItemGroup>
    <Service Include="{4A0DDDB5-7A95-4FBF-97CC-616D07737A77}" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="js\" />
    <Content Include="package.json" />
    <Content Include="Gulpfile.js" />
    <None Include="LICENSE" />
    <None Include="README.MD" />
    <None Include="AjsWebApp.json" />
    <None Include="AjsWebApp.Debug.json">
      <DependentUpon>AjsWebApp.json</DependentUpon>
    </None>
    <None Include="AjsWebApp.Release.json">
      <DependentUpon>AjsWebApp.json</DependentUpon>
    </None>
    <Content Include="web.config" />
    <None Include="web.Debug.config">
      <DependentUpon>web.config</DependentUpon>
    </None>
    <None Include="web.Release.config">
      <DependentUpon>web.config</DependentUpon>
    </None>
    <None Include="buildtools\AjsWebAppSchema.json" />
    <None Include="buildtools\README.MD" />
    <None Include="buildmodules\config\index.js" />
    <None Include="buildmodules\filesystem\index.js" />
    <None Include="buildmodules\offline\index.js" />
    <None Include="buildmodules\output\index.js" />
    <None Include="buildmodules\visualstudio\index.js" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Application.Boot\Application.Boot.csproj">
      <Project>{e82e6ea6-c947-46dd-98ca-13f0619696f8}</Project>
      <Name>Application.Boot</Name>
    </ProjectReference>
    <ProjectReference Include="..\Application.Lib\Application.Lib.csproj">
      <Project>{b2e6ede3-952d-47ff-a19f-eadd149db7fc}</Project>
      <Name>Application.Lib</Name>
    </ProjectReference>
    <ProjectReference Include="..\Application\Application.csproj">
      <Project>{e93f58b8-cfc1-4791-8ed7-0b8da36fefe9}</Project>
      <Name>Application</Name>
    </ProjectReference>
  </ItemGroup>
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">12.0</VisualStudioVersion>
  </PropertyGroup>
  <PropertyGroup>
    <RootNamespace>$safeprojectname$</RootNamespace>
  </PropertyGroup>
  <PropertyGroup>
    <RunPostBuildEvent>Always</RunPostBuildEvent>
  </PropertyGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!--<Target Name="Build"></Target>
  <Target Name="Clean"></Target>-->
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\WebApplications\Microsoft.WebApplication.targets" Condition="Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\WebApplications\Microsoft.WebApplication.targets')" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{349c5851-65df-11da-9384-00065b846f21}">
        <WebProjectProperties>
          <UseIIS>True</UseIIS>
          <AutoAssignPort>True</AutoAssignPort>
          <DevelopmentServerPort>8157</DevelopmentServerPort>
          <DevelopmentServerVPath>/</DevelopmentServerVPath>
          <IISUrl>http://localhost:8157/</IISUrl>
          <NTLMAuthentication>False</NTLMAuthentication>
          <UseCustomServer>False</UseCustomServer>
          <CustomServerUrl>
          </CustomServerUrl>
          <SaveServerSettingsInUserFile>False</SaveServerSettingsInUserFile>
        </WebProjectProperties>
      </FlavorProperties>
      <UserProperties AjsWebApp_1Debug_1json__JSONSchema="AjsWebAppSchema.json" />
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptJSXEmit>None</TypeScriptJSXEmit>
    <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
    <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
    <TypeScriptModuleKind>CommonJS</TypeScriptModuleKind>
    <TypeScriptRemoveComments>True</TypeScriptRemoveComments>
    <TypeScriptOutFile>
    </TypeScriptOutFile>
    <TypeScriptOutDir />
    <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
    <TypeScriptNoEmitOnError>False</TypeScriptNoEmitOnError>
    <TypeScriptSourceMap>False</TypeScriptSourceMap>
    <TypeScriptMapRoot />
    <TypeScriptSourceRoot />
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
  </PropertyGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TypeScript\Microsoft.TypeScript.targets" Condition="Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TypeScript\Microsoft.TypeScript.targets')" />
  <PropertyGroup>
    <PostBuildEvent>setlocal enabledelayedexpansion

echo Copying compiled buildtools modules...
for /F "tokens=*" %25%25A in ('dir /b/t/s "$(ProjectDir)buildtools\dist\buildmodules\*.js"') do call :processModulesJSFile "%25%25A"
echo.

echo Copying compiled Gulpfile...
copy "$(ProjectDir)buildtools\dist\Gulpfile.js" "$(ProjectDir)\Gulpfile.js"
echo.

echo Calling gulp afterBuild task...
call :gulp "$(ProjectDir)." "$(ProjectDir)Gulpfile.js" afterBuild
echo.

goto :end


:processModulesJSFile:
   set moduleName=
   call :getModuleName moduleName %251
   if not exist "$(ProjectDir)buildmodules\%25module%25" mkdir "$(ProjectDir)buildmodules\%25module%25"
   copy %251 "$(ProjectDir)buildmodules\%25module%25\index.js"
   goto :eof


:getModuleName
   set folder=%25~dp2
   if %25folder:~-1%25==\ SET folder=%25folder:~0,-1%25
   set parentFolder=
   call :getParentFolder parentFolder "%25folder%25"
   call set module=%25%25folder:!parentFolder!=%25%25
   set %251=%25module%25
   goto :eof


:getParentFolder
   for %25%25a in ("%25~dp2") do call set %251=%25%25~dpa
   goto :eof


:gulp
   set command="gulp -b %251 --no-color --gulpfile %252 %253"
   cmd.exe /c %25command%25
   goto :eof

:end
cd $(ProjectDir)
echo Current working directory is: %25cd%25

:eof</PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <PreBuildEvent>echo Preparing solutionInfo.json
call :prepareSolutionInfo "$(ProjectDir)buildtools\solutionInfo.json"
echo.

echo Calling gulp file beforeBuild...
call :gulp "$(ProjectDir)." "$(ProjectDir)Gulpfile.js" beforeBuild
echo.

goto :eof


:prepareSolutionInfo

   set solutionPath=$(SolutionPath)
   set solutionPath=%25solutionPath:\=\\%25
   set solutionDir=$(SolutionDir)
   set solutionDir=%25solutionDir:\=\\%25

   set toWrite={ 
   set toWrite=%25toWrite%25"solutionName" : "$(SolutionName)", 
   set toWrite=%25toWrite%25"solutionPath" : "%25solutionPath%25", 
   set toWrite=%25toWrite%25"solutionDir" : "%25solutionDir%25", 
   set toWrite=%25toWrite%25"solutionFileName" : "$(SolutionFileName)", 
   set toWrite=%25toWrite%25"platformName" : "$(PlatformName)", 
   set toWrite=%25toWrite%25"configurationName" : "$(ConfigurationName)", 
   set toWrite=%25toWrite%25"ajsWebAppProject" : "$(ProjectName)" 
   set toWrite=%25toWrite%25}
   echo %25toWrite%25 &gt; %251
   goto :eof

:gulp
   set command="gulp -b %251 --no-color --gulpfile %252 %253"
   cmd.exe /c %25command%25
   goto :eof

:eof</PreBuildEvent>
  </PropertyGroup>
</Project>